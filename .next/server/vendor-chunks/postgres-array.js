"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/postgres-array";
exports.ids = ["vendor-chunks/postgres-array"];
exports.modules = {

/***/ "(rsc)/./node_modules/postgres-array/index.js":
/*!**********************************************!*\
  !*** ./node_modules/postgres-array/index.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nexports.parse = function (source, transform) {\n  return parsePostgresArray(source, transform)\n}\n\nfunction parsePostgresArray (source, transform, nested = false) {\n  let character = ''\n  let quote = false\n  let position = 0\n  let dimension = 0\n  const entries = []\n  let recorded = ''\n\n  const newEntry = function (includeEmpty) {\n    let entry = recorded\n\n    if (entry.length > 0 || includeEmpty) {\n      if (entry === 'NULL' && !includeEmpty) {\n        entry = null\n      }\n\n      if (entry !== null && transform) {\n        entry = transform(entry)\n      }\n\n      entries.push(entry)\n      recorded = ''\n    }\n  }\n\n  if (source[0] === '[') {\n    while (position < source.length) {\n      const char = source[position++]\n\n      if (char === '=') { break }\n    }\n  }\n\n  while (position < source.length) {\n    let escaped = false\n    character = source[position++]\n\n    if (character === '\\\\') {\n      character = source[position++]\n      escaped = true\n    }\n\n    if (character === '{' && !quote) {\n      dimension++\n\n      if (dimension > 1) {\n        const parser = parsePostgresArray(source.substr(position - 1), transform, true)\n\n        entries.push(parser.entries)\n        position += parser.position - 2\n      }\n    } else if (character === '}' && !quote) {\n      dimension--\n\n      if (!dimension) {\n        newEntry()\n\n        if (nested) {\n          return {\n            entries,\n            position\n          }\n        }\n      }\n    } else if (character === '\"' && !escaped) {\n      if (quote) {\n        newEntry(true)\n      }\n\n      quote = !quote\n    } else if (character === ',' && !quote) {\n      newEntry()\n    } else {\n      recorded += character\n    }\n  }\n\n  if (dimension !== 0) {\n    throw new Error('array dimension not balanced')\n  }\n\n  return entries\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcG9zdGdyZXMtYXJyYXkvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQVk7O0FBRVosYUFBYTtBQUNiO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLDBCQUEwQjtBQUMxQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSx3QkFBd0I7QUFDeEI7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLHlCQUF5QjtBQUMvQjs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLE1BQU07QUFDTjtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qc3RhY2svLi9ub2RlX21vZHVsZXMvcG9zdGdyZXMtYXJyYXkvaW5kZXguanM/ZDUyYSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxuZXhwb3J0cy5wYXJzZSA9IGZ1bmN0aW9uIChzb3VyY2UsIHRyYW5zZm9ybSkge1xuICByZXR1cm4gcGFyc2VQb3N0Z3Jlc0FycmF5KHNvdXJjZSwgdHJhbnNmb3JtKVxufVxuXG5mdW5jdGlvbiBwYXJzZVBvc3RncmVzQXJyYXkgKHNvdXJjZSwgdHJhbnNmb3JtLCBuZXN0ZWQgPSBmYWxzZSkge1xuICBsZXQgY2hhcmFjdGVyID0gJydcbiAgbGV0IHF1b3RlID0gZmFsc2VcbiAgbGV0IHBvc2l0aW9uID0gMFxuICBsZXQgZGltZW5zaW9uID0gMFxuICBjb25zdCBlbnRyaWVzID0gW11cbiAgbGV0IHJlY29yZGVkID0gJydcblxuICBjb25zdCBuZXdFbnRyeSA9IGZ1bmN0aW9uIChpbmNsdWRlRW1wdHkpIHtcbiAgICBsZXQgZW50cnkgPSByZWNvcmRlZFxuXG4gICAgaWYgKGVudHJ5Lmxlbmd0aCA+IDAgfHwgaW5jbHVkZUVtcHR5KSB7XG4gICAgICBpZiAoZW50cnkgPT09ICdOVUxMJyAmJiAhaW5jbHVkZUVtcHR5KSB7XG4gICAgICAgIGVudHJ5ID0gbnVsbFxuICAgICAgfVxuXG4gICAgICBpZiAoZW50cnkgIT09IG51bGwgJiYgdHJhbnNmb3JtKSB7XG4gICAgICAgIGVudHJ5ID0gdHJhbnNmb3JtKGVudHJ5KVxuICAgICAgfVxuXG4gICAgICBlbnRyaWVzLnB1c2goZW50cnkpXG4gICAgICByZWNvcmRlZCA9ICcnXG4gICAgfVxuICB9XG5cbiAgaWYgKHNvdXJjZVswXSA9PT0gJ1snKSB7XG4gICAgd2hpbGUgKHBvc2l0aW9uIDwgc291cmNlLmxlbmd0aCkge1xuICAgICAgY29uc3QgY2hhciA9IHNvdXJjZVtwb3NpdGlvbisrXVxuXG4gICAgICBpZiAoY2hhciA9PT0gJz0nKSB7IGJyZWFrIH1cbiAgICB9XG4gIH1cblxuICB3aGlsZSAocG9zaXRpb24gPCBzb3VyY2UubGVuZ3RoKSB7XG4gICAgbGV0IGVzY2FwZWQgPSBmYWxzZVxuICAgIGNoYXJhY3RlciA9IHNvdXJjZVtwb3NpdGlvbisrXVxuXG4gICAgaWYgKGNoYXJhY3RlciA9PT0gJ1xcXFwnKSB7XG4gICAgICBjaGFyYWN0ZXIgPSBzb3VyY2VbcG9zaXRpb24rK11cbiAgICAgIGVzY2FwZWQgPSB0cnVlXG4gICAgfVxuXG4gICAgaWYgKGNoYXJhY3RlciA9PT0gJ3snICYmICFxdW90ZSkge1xuICAgICAgZGltZW5zaW9uKytcblxuICAgICAgaWYgKGRpbWVuc2lvbiA+IDEpIHtcbiAgICAgICAgY29uc3QgcGFyc2VyID0gcGFyc2VQb3N0Z3Jlc0FycmF5KHNvdXJjZS5zdWJzdHIocG9zaXRpb24gLSAxKSwgdHJhbnNmb3JtLCB0cnVlKVxuXG4gICAgICAgIGVudHJpZXMucHVzaChwYXJzZXIuZW50cmllcylcbiAgICAgICAgcG9zaXRpb24gKz0gcGFyc2VyLnBvc2l0aW9uIC0gMlxuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoY2hhcmFjdGVyID09PSAnfScgJiYgIXF1b3RlKSB7XG4gICAgICBkaW1lbnNpb24tLVxuXG4gICAgICBpZiAoIWRpbWVuc2lvbikge1xuICAgICAgICBuZXdFbnRyeSgpXG5cbiAgICAgICAgaWYgKG5lc3RlZCkge1xuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBlbnRyaWVzLFxuICAgICAgICAgICAgcG9zaXRpb25cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGNoYXJhY3RlciA9PT0gJ1wiJyAmJiAhZXNjYXBlZCkge1xuICAgICAgaWYgKHF1b3RlKSB7XG4gICAgICAgIG5ld0VudHJ5KHRydWUpXG4gICAgICB9XG5cbiAgICAgIHF1b3RlID0gIXF1b3RlXG4gICAgfSBlbHNlIGlmIChjaGFyYWN0ZXIgPT09ICcsJyAmJiAhcXVvdGUpIHtcbiAgICAgIG5ld0VudHJ5KClcbiAgICB9IGVsc2Uge1xuICAgICAgcmVjb3JkZWQgKz0gY2hhcmFjdGVyXG4gICAgfVxuICB9XG5cbiAgaWYgKGRpbWVuc2lvbiAhPT0gMCkge1xuICAgIHRocm93IG5ldyBFcnJvcignYXJyYXkgZGltZW5zaW9uIG5vdCBiYWxhbmNlZCcpXG4gIH1cblxuICByZXR1cm4gZW50cmllc1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/postgres-array/index.js\n");

/***/ })

};
;